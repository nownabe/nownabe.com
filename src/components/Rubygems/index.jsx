import React from 'react';

import Section from 'common/partials/Section';
import Items from 'common/partials/Items';

const rubygems = [
  {
    url: 'https://github.com/nownabe/easy_settings',
    title: 'easy_settings',
    description:
      `easy_settings is a gem to manage constants from yaml very easily.
      It can be used as standalone and also integrated into Rails.`,
  },
  {
    url: 'https://github.com/nownabe/black_company',
    title: 'black_company',
    description:
      'black_company is a gem to provide thread pool with simple and flexible interface.',
  },
  {
    url: 'https://github.com/nownabe/erlang_config_parser',
    title: 'erlang_config_parser',
    description:
      `erlang_config_parser is a parser to parse Erlang data structures.
      The parser in it is generated by Racc.`,
  },
  {
    url: 'https://github.com/nownabe/app_root',
    title: 'app_root',
    description:
      `app_root gem can detect the application's root directory, inspired by Rails.root.
      It is expected to be embedded in frameworks.`,
  },
  {
    url: 'https://github.com/nownabe/rack-rsync',
    title: 'rack-rsync',
    description:
      `rack-rsync is a rack middleware to sync files to other server with rsync.
      It was created to make Gem in a Box server redundant.`,
  },
  {
    url: 'https://github.com/nownabe/bq_guess',
    title: 'bq_guess',
    description:
      `bq_guess guesses BigQuery schemas from existing logs.
      Now it supports JSON Lines and LTSV logs.`,
  },
  {
    url: 'https://github.com/nownabe/bq_coaster',
    title: 'bq_coaster',
    description:
      `bq_coaster is a tool set for Google Cloud Dataflow and BigQuery.
      It can automatically generate BigQuery schemas,
      Java classes wrapping logs and
      Java converter classes for Dataflow to convert logs into BigQuery Rows from a schema file.`,
  },
  {
    url: 'https://github.com/nownabe/zabbix_sender',
    title: 'zabbix_sender',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/ocs',
    title: 'ocs',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/jqr',
    title: 'jqr',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/ringc',
    title: 'ringc',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/middleman-renderers-qiita_template',
    title: 'middleman-renderers-qiita_template',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/geminabox-rake_tasks',
    title: 'geminabox-rake_tasks',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/interface_parser',
    title: 'interface_parser',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/takoyaki',
    title: 'takoyaki',
    description: '',
  },
  {
    url: 'https://rubygems.org/profiles/nownabe',
    title: 'Other Gems',
    description: 'All gems are in rubygems.org.',
  },
];

const itamaePlugins = [
  {
    url: 'https://github.com/nownabe/itamae-plugin-resource-authorized_keys',
    title: 'itamae-plugin-resource-authorized_keys',
    description:
      `It is an Itamae resource plugin to configure linux user's SSH authorized_keys file.
      It can get authorized_keys from string data, local files and GitHub.`,
  },
  {
    url: 'https://github.com/nownabe/itamae-node_env',
    title: 'itamae-node_env',
    description:
      `itamae-node_env is an Itamae wrapper to provide itamae-env command.
      With itamae-env, environment variables can be used for node attributes.`,
  },
  {
    url: 'https://github.com/nownabe/itamae-default_attributes',
    title: 'itamae-default_attributes',
    description: '',
  },
  {
    url: 'https://github.com/nownabe/itamae-plugin-recipe-idcf-backup_to_object_storage',
    title: 'itamae-plugin-recipe-idcf-backup_to_object_storage',
    description: '',
  },
];

const rubotyPlugins = [
  {
    url: 'https://github.com/nownabe/ruboty-leveldb',
    title: 'ruboty-leveldb',
    description:
      'A Ruboty plugin to store brain in LevelDB.',
  },
  {
    url: 'https://github.com/nownabe/ruboty-json',
    title: 'ruboty-json',
    description:
      'A Ruboty plugin to store brain in a JSON file.',
  },
  {
    url: 'https://github.com/nownabe/ruboty-metal',
    title: 'ruboty-metal',
    description: 'My first gem!',
  },
];

export default () => (
  <div>
    <Section title="Rubygems">
      <Items contents={rubygems} />
    </Section>
    <Section title="Itamae Plugins">
      <Items contents={itamaePlugins} />
    </Section>
    <Section title="Ruboty Plugins">
      <Items contents={rubotyPlugins} />
    </Section>
  </div>
);
